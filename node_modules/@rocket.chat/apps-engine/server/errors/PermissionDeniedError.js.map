{"version":3,"sources":["src/server/errors/PermissionDeniedError.ts"],"names":[],"mappings":";;;AAUA,MAAa,qBAAsB,SAAQ,KAAK;IAC5C,YAAY,EAAE,KAAK,EAAE,kBAAkB,EAAG,UAAU,EAAE,MAAM,EAAE,OAAO,EAAgC;QACjG,IAAI,OAAO,EAAE;YACT,KAAK,CAAC,OAAO,CAAC,CAAC;SAClB;aAAM;YACH,MAAM,WAAW,GAAG,kBAAkB;iBACjC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,IAAI,UAAU,CAAC,IAAI,GAAG,CAAC;iBAC3C,IAAI,CAAC,IAAI,CAAC,CAAC;YAEhB,KAAK,CAAC,6BAA8B,UAAU,CAAE,CAAC,CAAC,IAAK,UAAW,GAAG,CAAC,CAAC,CAAC,EAAG,gBAAiB,KAAM,sCAAsC;kBACtI,IAAK,WAAY,sDAAsD;kBACvE,WAAY,MAAO,EAAE,CAAC,CAAC;SAC5B;IACL,CAAC;CACJ;AAdD,sDAcC","file":"PermissionDeniedError.js","sourcesContent":["import { IPermission } from '../../definition/permissions/IPermission';\n\ninterface IPermissionDeniedErrorParams {\n    appId: string;\n    missingPermissions: Array<IPermission>;\n    methodName?: string;\n    reason?: string;\n    message?: string;\n}\n\nexport class PermissionDeniedError extends Error {\n    constructor({ appId, missingPermissions,  methodName, reason, message }: IPermissionDeniedErrorParams) {\n        if (message) {\n            super(message);\n        } else {\n            const permissions = missingPermissions\n                .map((permission) => `\"${permission.name}\"`)\n                .join(', ');\n\n            super(`Failed to call the method ${ methodName  ? `\"${ methodName }\"` : '' } as the app (${ appId }) lacks the following permissions:\\n`\n            + `[${ permissions }]. Declare them in your app.json to fix the issue.\\n`\n            + `reason: ${ reason }`);\n        }\n    }\n}\n"]}