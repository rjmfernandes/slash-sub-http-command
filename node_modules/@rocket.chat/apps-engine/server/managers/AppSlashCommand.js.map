{"version":3,"sources":["src/server/managers/AppSlashCommand.ts"],"names":[],"mappings":"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","file":"AppSlashCommand.js","sourcesContent":["import { AppMethod } from '../../definition/metadata';\nimport { ISlashCommand, ISlashCommandPreview, ISlashCommandPreviewItem, SlashCommandContext } from '../../definition/slashcommands';\n\nimport { ProxiedApp } from '../ProxiedApp';\nimport { AppLogStorage } from '../storage';\nimport { AppAccessorManager } from './AppAccessorManager';\n\nexport class AppSlashCommand {\n    /**\n     * States whether this command has been registered into the Rocket.Chat system or not.\n     */\n    public isRegistered: boolean;\n\n    /**\n     * Declares whether this command has been enabled or not,\n     * does not have to be inside of the Rocket.Chat system if `isRegistered` is false.\n     */\n    public isEnabled: boolean;\n\n    /**\n     * Proclaims whether this command has been disabled or not,\n     * does not have to be inside the Rocket.Chat system if `isRegistered` is false.\n     */\n    public isDisabled: boolean;\n\n    constructor(public app: ProxiedApp, public slashCommand: ISlashCommand) {\n        this.isRegistered = false;\n        this.isEnabled = false;\n        this.isDisabled = false;\n    }\n\n    public hasBeenRegistered(): void {\n        this.isDisabled = false;\n        this.isEnabled = true;\n        this.isRegistered = true;\n    }\n\n    public canBeRan(method: AppMethod): boolean {\n        return this.app.hasMethod(method);\n    }\n\n    public async runExecutorOrPreviewer(\n      method: AppMethod._COMMAND_EXECUTOR | AppMethod._COMMAND_PREVIEWER,\n      context: SlashCommandContext,\n      logStorage: AppLogStorage,\n      accessors: AppAccessorManager,\n    ): Promise<void | ISlashCommandPreview> {\n        return await this.runTheCode(method, logStorage, accessors, context, new Array());\n    }\n\n    public async runPreviewExecutor(\n      previewItem: ISlashCommandPreviewItem,\n      context: SlashCommandContext,\n      logStorage: AppLogStorage,\n      accessors: AppAccessorManager,\n    ): Promise<void> {\n        await this.runTheCode(AppMethod._COMMAND_PREVIEW_EXECUTOR, logStorage, accessors, context, [previewItem]);\n        return;\n    }\n\n    private async runTheCode(\n      method: AppMethod._COMMAND_EXECUTOR | AppMethod._COMMAND_PREVIEWER | AppMethod._COMMAND_PREVIEW_EXECUTOR,\n      logStorage: AppLogStorage,\n      accessors: AppAccessorManager,\n      context: SlashCommandContext,\n      runContextArgs: Array<any>,\n    ): Promise<void | ISlashCommandPreview> {\n        const command = this.slashCommand.command;\n\n        // Ensure the slash command has the property before going on\n        if (typeof this.slashCommand[method] !== 'function') {\n            return;\n        }\n\n        const logger = this.app.setupLogger(method);\n        logger.debug(`${ command }'s ${ method } is being executed...`, context);\n\n        try {\n            const runCode = `module.exports = slashCommand.${ method }.apply(slashCommand, args)`;\n            const result = await this.app.getRuntime().runInSandbox(runCode, {\n                slashCommand: this.slashCommand,\n                args: [\n                    ...runContextArgs,\n                    context,\n                    accessors.getReader(this.app.getID()),\n                    accessors.getModifier(this.app.getID()),\n                    accessors.getHttp(this.app.getID()),\n                    accessors.getPersistence(this.app.getID()),\n                ],\n            });\n\n            logger.debug(`${ command }'s ${ method } was successfully executed.`);\n            return result;\n        } catch (e) {\n            logger.error(e);\n            logger.debug(`${ command }'s ${ method } was unsuccessful.`);\n        } finally {\n            await logStorage.storeEntries(this.app.getID(), logger);\n        }\n    }\n}\n"]}