{"version":3,"sources":["src/server/managers/AppListenerManager.ts"],"names":[],"mappings":"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","file":"AppListenerManager.js","sourcesContent":["import { IEmailDescriptor, IPreEmailSentContext } from '../../definition/email';\nimport { EssentialAppDisabledException } from '../../definition/exceptions';\nimport { IExternalComponent } from '../../definition/externalComponent';\nimport { ILivechatEventContext, ILivechatRoom, ILivechatTransferEventContext, IVisitor } from '../../definition/livechat';\nimport {\n  IMessage,\n  IMessageDeleteContext,\n  IMessageFollowContext,\n  IMessagePinContext,\n  IMessageReactionContext,\n  IMessageReportContext,\n  IMessageStarContext,\n} from '../../definition/messages';\nimport { AppInterface, AppMethod } from '../../definition/metadata';\nimport { IRoom, IRoomUserJoinedContext, IRoomUserLeaveContext } from '../../definition/rooms';\nimport { UIActionButtonContext } from '../../definition/ui';\nimport { IUIKitIncomingInteraction, IUIKitResponse, IUIKitSurface, UIKitIncomingInteractionType } from '../../definition/uikit';\nimport { IUIKitLivechatIncomingInteraction, UIKitLivechatBlockInteractionContext } from '../../definition/uikit/livechat';\nimport { IUIKitIncomingInteractionMessageContainer, IUIKitIncomingInteractionModalContainer } from '../../definition/uikit/UIKitIncomingInteractionContainer';\nimport {\n    UIKitActionButtonInteractionContext,\n    UIKitBlockInteractionContext,\n    UIKitViewCloseInteractionContext,\n    UIKitViewSubmitInteractionContext,\n} from '../../definition/uikit/UIKitInteractionContext';\nimport { IFileUploadContext } from '../../definition/uploads/IFileUploadContext';\nimport { IUser, IUserContext, IUserStatusContext, IUserUpdateContext } from '../../definition/users';\nimport { MessageBuilder, MessageExtender, RoomBuilder, RoomExtender } from '../accessors';\nimport { AppManager } from '../AppManager';\nimport { Message } from '../messages/Message';\nimport { Utilities } from '../misc/Utilities';\nimport { ProxiedApp } from '../ProxiedApp';\nimport { Room } from '../rooms/Room';\nimport { AppAccessorManager } from './AppAccessorManager';\n\ntype EventData = (\n    IMessage |\n    IRoom |\n    IUser |\n    IVisitor |\n    ILivechatRoom |\n    IUIKitIncomingInteraction |\n    IUIKitLivechatIncomingInteraction |\n    IExternalComponent |\n    ILivechatEventContext |\n    IRoomUserJoinedContext |\n    IRoomUserLeaveContext |\n    ILivechatTransferEventContext |\n    IFileUploadContext |\n    IPreEmailSentContext |\n    IMessageReactionContext |\n    IMessageFollowContext |\n    IMessagePinContext |\n    IMessageStarContext |\n    IMessageReportContext |\n    IMessageDeleteContext |\n    IUserContext |\n    IUserUpdateContext |\n    IUserStatusContext\n);\n\ntype EventReturn = (\n    void |\n    boolean |\n    IMessage |\n    IRoom |\n    IUser |\n    IUIKitResponse |\n    ILivechatRoom |\n    IEmailDescriptor\n);\n\nexport class AppListenerManager {\n    private am: AppAccessorManager;\n    private listeners: Map<string, Array<string>>;\n    /**\n     * Locked events are those who are listed in an app's\n     * \"essentials\" list but the app is disabled.\n     *\n     * They will throw a EssentialAppDisabledException upon call\n     */\n    private lockedEvents: Map<string, Set<string>>;\n\n    constructor(private readonly manager: AppManager) {\n        this.am = manager.getAccessorManager();\n        this.listeners = new Map<string, Array<string>>();\n        this.lockedEvents = new Map<string, Set<string>>();\n\n        Object.keys(AppInterface).forEach((intt) => {\n            this.listeners.set(intt, new Array<string>());\n            this.lockedEvents.set(intt, new Set<string>());\n        });\n    }\n\n    public registerListeners(app: ProxiedApp): void {\n        this.unregisterListeners(app);\n\n        Object.entries(app.getImplementationList()).forEach(([event, isImplemented]) => {\n            if (!isImplemented) {\n                return;\n            }\n\n            this.listeners.get(event).push(app.getID());\n        });\n    }\n\n    public unregisterListeners(app: ProxiedApp): void {\n        this.listeners.forEach((apps, int) => {\n            if (apps.includes(app.getID())) {\n                const where = apps.indexOf(app.getID());\n                this.listeners.get(int).splice(where, 1);\n            }\n        });\n    }\n\n    public releaseEssentialEvents(app: ProxiedApp): void {\n        if (!app.getEssentials()) {\n            return;\n        }\n\n        app.getEssentials().forEach((event) => {\n            const lockedEvent = this.lockedEvents.get(event);\n\n            if (!lockedEvent) {\n                return;\n            }\n\n            lockedEvent.delete(app.getID());\n        });\n    }\n\n    public lockEssentialEvents(app: ProxiedApp): void {\n        if (!app.getEssentials()) {\n            return;\n        }\n\n        app.getEssentials().forEach((event) => {\n            const lockedEvent = this.lockedEvents.get(event);\n\n            if (!lockedEvent) {\n                return;\n            }\n\n            lockedEvent.add(app.getID());\n        });\n    }\n\n    public getListeners(int: AppInterface): Array<ProxiedApp> {\n        const results = new Array<ProxiedApp>();\n\n        for (const appId of this.listeners.get(int)) {\n            results.push(this.manager.getOneById(appId));\n        }\n\n        return results;\n    }\n\n    public isEventBlocked(event: AppInterface): boolean {\n        const lockedEventList = this.lockedEvents.get(event);\n\n        return !!(lockedEventList && lockedEventList.size);\n    }\n\n    public async executeListener(int: AppInterface, data: EventData): Promise<EventReturn> {\n        if (this.isEventBlocked(int)) {\n            throw new EssentialAppDisabledException('There is one or more apps that are essential to this event but are disabled');\n        }\n\n        switch (int) {\n            // Messages\n            case AppInterface.IPreMessageSentPrevent:\n                return this.executePreMessageSentPrevent(data as IMessage);\n            case AppInterface.IPreMessageSentExtend:\n                return this.executePreMessageSentExtend(data as IMessage);\n            case AppInterface.IPreMessageSentModify:\n                return this.executePreMessageSentModify(data as IMessage);\n            case AppInterface.IPostMessageSent:\n                this.executePostMessageSent(data as IMessage);\n                return;\n            case AppInterface.IPreMessageDeletePrevent:\n                return this.executePreMessageDeletePrevent(data as IMessage);\n            case AppInterface.IPostMessageDeleted:\n                this.executePostMessageDelete(data as IMessageDeleteContext);\n                return;\n            case AppInterface.IPreMessageUpdatedPrevent:\n                return this.executePreMessageUpdatedPrevent(data as IMessage);\n            case AppInterface.IPreMessageUpdatedExtend:\n                return this.executePreMessageUpdatedExtend(data as IMessage);\n            case AppInterface.IPreMessageUpdatedModify:\n                return this.executePreMessageUpdatedModify(data as IMessage);\n            case AppInterface.IPostMessageUpdated:\n                this.executePostMessageUpdated(data as IMessage);\n                return;\n            case AppInterface.IPostMessageReacted:\n                return this.executePostMessageReacted(data as IMessageReactionContext);\n            case AppInterface.IPostMessageFollowed:\n                return this.executePostMessageFollowed(data as IMessageFollowContext);\n            case AppInterface.IPostMessagePinned:\n                return this.executePostMessagePinned(data as IMessagePinContext);\n            case AppInterface.IPostMessageStarred:\n                return this.executePostMessageStarred(data as IMessageStarContext);\n            case AppInterface.IPostMessageReported:\n                return this.executePostMessageReported(data as IMessageReportContext);\n            // Rooms\n            case AppInterface.IPreRoomCreatePrevent:\n                return this.executePreRoomCreatePrevent(data as IRoom);\n            case AppInterface.IPreRoomCreateExtend:\n                return this.executePreRoomCreateExtend(data as IRoom);\n            case AppInterface.IPreRoomCreateModify:\n                return this.executePreRoomCreateModify(data as IRoom);\n            case AppInterface.IPostRoomCreate:\n                this.executePostRoomCreate(data as IRoom);\n                return;\n            case AppInterface.IPreRoomDeletePrevent:\n                return this.executePreRoomDeletePrevent(data as IRoom);\n            case AppInterface.IPostRoomDeleted:\n                this.executePostRoomDeleted(data as IRoom);\n                return;\n            case AppInterface.IPreRoomUserJoined:\n                return this.executePreRoomUserJoined(data as IRoomUserJoinedContext);\n            case AppInterface.IPostRoomUserJoined:\n                return this.executePostRoomUserJoined(data as IRoomUserJoinedContext);\n            case AppInterface.IPreRoomUserLeave:\n                return this.executePreRoomUserLeave(data as IRoomUserLeaveContext);\n            case AppInterface.IPostRoomUserLeave:\n                return this.executePostRoomUserLeave(data as IRoomUserLeaveContext);\n            // External Components\n            case AppInterface.IPostExternalComponentOpened:\n                this.executePostExternalComponentOpened(data as IExternalComponent);\n                return;\n            case AppInterface.IPostExternalComponentClosed:\n                this.executePostExternalComponentClosed(data as IExternalComponent);\n                return;\n            case AppInterface.IUIKitInteractionHandler:\n                return this.executeUIKitInteraction(data as IUIKitIncomingInteraction);\n            case AppInterface.IUIKitLivechatInteractionHandler:\n                return this.executeUIKitLivechatInteraction(data as IUIKitLivechatIncomingInteraction);\n            // Livechat\n            case AppInterface.IPostLivechatRoomStarted:\n                return this.executePostLivechatRoomStarted(data as ILivechatRoom);\n            /**\n             * @deprecated please prefer the AppInterface.IPostLivechatRoomClosed event\n             */\n            case AppInterface.ILivechatRoomClosedHandler:\n                return this.executeLivechatRoomClosedHandler(data as ILivechatRoom);\n            case AppInterface.IPostLivechatRoomClosed:\n                return this.executePostLivechatRoomClosed(data as ILivechatRoom);\n            case AppInterface.IPostLivechatRoomSaved:\n                return this.executePostLivechatRoomSaved(data as ILivechatRoom);\n            case AppInterface.IPostLivechatAgentAssigned:\n                return this.executePostLivechatAgentAssigned(data as ILivechatEventContext);\n            case AppInterface.IPostLivechatAgentUnassigned:\n                return this.executePostLivechatAgentUnassigned(data as ILivechatEventContext);\n            case AppInterface.IPostLivechatRoomTransferred:\n                return this.executePostLivechatRoomTransferred(data as ILivechatTransferEventContext);\n            case AppInterface.IPostLivechatGuestSaved:\n                return this.executePostLivechatGuestSaved(data as IVisitor);\n            // FileUpload\n            case AppInterface.IPreFileUpload:\n                return this.executePreFileUpload(data as IFileUploadContext);\n            // Email\n            case AppInterface.IPreEmailSent:\n                return this.executePreEmailSent(data as IPreEmailSentContext);\n            // User\n            case AppInterface.IPostUserCreated:\n                return this.executePostUserCreated(data as IUserContext);\n            case AppInterface.IPostUserUpdated:\n                return this.executePostUserUpdated(data as IUserContext);\n            case AppInterface.IPostUserDeleted:\n                return this.executePostUserDeleted(data as IUserContext);\n            case AppInterface.IPostUserLoggedIn:\n                return this.executePostUserLoggedIn(data as IUser);\n            case AppInterface.IPostUserLoggedOut:\n                return this.executePostUserLoggedOut(data as IUser);\n            case AppInterface.IPostUserStatusChanged:\n                return this.executePostUserStatusChanged(data as IUserStatusContext);\n            default:\n                console.warn('An invalid listener was called');\n                return;\n        }\n    }\n\n    // Messages\n    private async executePreMessageSentPrevent(data: IMessage): Promise<boolean> {\n        let prevented = false;\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreMessageSentPrevent)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREMESSAGESENTPREVENT)) {\n                continueOn = await app.call(AppMethod.CHECKPREMESSAGESENTPREVENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREMESSAGESENTPREVENT)) {\n                prevented = await app.call(AppMethod.EXECUTEPREMESSAGESENTPREVENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as boolean;\n\n                if (prevented) {\n                    return prevented;\n                }\n            }\n        }\n\n        return prevented;\n    }\n\n    private async executePreMessageSentExtend(data: IMessage): Promise<IMessage> {\n        const msg = data;\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreMessageSentExtend)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREMESSAGESENTEXTEND)) {\n                continueOn = await app.call(AppMethod.CHECKPREMESSAGESENTEXTEND,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREMESSAGESENTEXTEND)) {\n                await app.call(AppMethod.EXECUTEPREMESSAGESENTEXTEND,\n                    cfMsg,\n                    new MessageExtender(msg), // This mutates the passed in object\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                );\n            }\n        }\n\n        return msg;\n    }\n\n    private async executePreMessageSentModify(data: IMessage): Promise<IMessage> {\n        let msg = data;\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreMessageSentModify)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREMESSAGESENTMODIFY)) {\n                continueOn = await app.call(AppMethod.CHECKPREMESSAGESENTMODIFY,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREMESSAGESENTMODIFY)) {\n                msg = await app.call(AppMethod.EXECUTEPREMESSAGESENTMODIFY,\n                    cfMsg,\n                    new MessageBuilder(msg),\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as IMessage;\n            }\n        }\n\n        return data;\n    }\n\n    private async executePostMessageSent(data: IMessage): Promise<void> {\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPostMessageSent)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPOSTMESSAGESENT)) {\n                continueOn = await app.call(AppMethod.CHECKPOSTMESSAGESENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPOSTMESSAGESENT)) {\n                await app.call(AppMethod.EXECUTEPOSTMESSAGESENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                );\n            }\n        }\n    }\n\n    private async executePreMessageDeletePrevent(data: IMessage): Promise<boolean> {\n        let prevented = false;\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreMessageDeletePrevent)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREMESSAGEDELETEPREVENT)) {\n                continueOn = await app.call(AppMethod.CHECKPREMESSAGEDELETEPREVENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREMESSAGEDELETEPREVENT)) {\n                prevented = await app.call(AppMethod.EXECUTEPREMESSAGEDELETEPREVENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as boolean;\n\n                if (prevented) {\n                    return prevented;\n                }\n            }\n        }\n\n        return prevented;\n    }\n\n    private async executePostMessageDelete(data: IMessageDeleteContext): Promise<void> {\n        const context = Utilities.deepCloneAndFreeze(data);\n        const {message} = context;\n\n        for (const appId of this.listeners.get(AppInterface.IPostMessageDeleted)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPOSTMESSAGEDELETED)) {\n                continueOn = await app.call(AppMethod.CHECKPOSTMESSAGEDELETED,\n                    // `context` has more information about the event, but\n                    // we had to keep this `message` here for compatibility\n                    message,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    context,\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPOSTMESSAGEDELETED)) {\n                await app.call(AppMethod.EXECUTEPOSTMESSAGEDELETED,\n                    message,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                    context,\n                );\n            }\n        }\n    }\n\n    private async executePreMessageUpdatedPrevent(data: IMessage): Promise<boolean> {\n        let prevented = false;\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreMessageUpdatedPrevent)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREMESSAGEUPDATEDPREVENT)) {\n                continueOn = await app.call(AppMethod.CHECKPREMESSAGEUPDATEDPREVENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREMESSAGEUPDATEDPREVENT)) {\n                prevented = await app.call(AppMethod.EXECUTEPREMESSAGEUPDATEDPREVENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as boolean;\n\n                if (prevented) {\n                    return prevented;\n                }\n            }\n        }\n\n        return prevented;\n    }\n\n    private async executePreMessageUpdatedExtend(data: IMessage): Promise<IMessage> {\n        const msg = data;\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreMessageUpdatedExtend)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREMESSAGEUPDATEDEXTEND)) {\n                continueOn = await app.call(AppMethod.CHECKPREMESSAGEUPDATEDEXTEND,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREMESSAGEUPDATEDEXTEND)) {\n                await app.call(AppMethod.EXECUTEPREMESSAGEUPDATEDEXTEND,\n                    cfMsg,\n                    new MessageExtender(msg), // This mutates the passed in object\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                );\n            }\n        }\n\n        return msg;\n    }\n\n    private async executePreMessageUpdatedModify(data: IMessage): Promise<IMessage> {\n        let msg = data;\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreMessageUpdatedModify)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREMESSAGEUPDATEDMODIFY)) {\n                continueOn = await app.call(AppMethod.CHECKPREMESSAGEUPDATEDMODIFY,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREMESSAGEUPDATEDMODIFY)) {\n                msg = await app.call(AppMethod.EXECUTEPREMESSAGEUPDATEDMODIFY,\n                    cfMsg,\n                    new MessageBuilder(msg),\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as IMessage;\n            }\n        }\n\n        return data;\n    }\n\n    private async executePostMessageUpdated(data: IMessage): Promise<void> {\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPostMessageUpdated)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPOSTMESSAGEUPDATED)) {\n                continueOn = await app.call(AppMethod.CHECKPOSTMESSAGEUPDATED,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPOSTMESSAGEUPDATED)) {\n                await app.call(AppMethod.EXECUTEPOSTMESSAGEUPDATED,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                );\n            }\n        }\n    }\n\n    // Rooms\n    private async executePreRoomCreatePrevent(data: IRoom): Promise<boolean> {\n        const cfRoom = new Room(Utilities.deepCloneAndFreeze(data), this.manager);\n        let prevented = false;\n\n        for (const appId of this.listeners.get(AppInterface.IPreRoomCreatePrevent)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREROOMCREATEPREVENT)) {\n                continueOn = await app.call(AppMethod.CHECKPREROOMCREATEPREVENT,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREROOMCREATEPREVENT)) {\n                prevented = await app.call(AppMethod.EXECUTEPREROOMCREATEPREVENT,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as boolean;\n\n                if (prevented) {\n                    return prevented;\n                }\n            }\n        }\n\n        return prevented;\n    }\n\n    private async executePreRoomCreateExtend(data: IRoom): Promise<IRoom> {\n        const room = data;\n        const cfRoom = new Room(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreRoomCreateExtend)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREROOMCREATEEXTEND)) {\n                continueOn = await app.call(AppMethod.CHECKPREROOMCREATEEXTEND,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREROOMCREATEEXTEND)) {\n                await app.call(AppMethod.EXECUTEPREROOMCREATEEXTEND,\n                    cfRoom,\n                    new RoomExtender(room), // This mutates the passed in object\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                );\n            }\n        }\n\n        return data;\n    }\n\n    private async executePreRoomCreateModify(data: IRoom): Promise<IRoom> {\n        let room = data;\n        const cfRoom = new Room(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreRoomCreateModify)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREROOMCREATEMODIFY)) {\n                continueOn = await app.call(AppMethod.CHECKPREROOMCREATEMODIFY,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREROOMCREATEMODIFY)) {\n                room = await app.call(AppMethod.EXECUTEPREROOMCREATEMODIFY,\n                    cfRoom,\n                    new RoomBuilder(room),\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as IRoom;\n            }\n        }\n\n        return data;\n    }\n\n    private async executePostRoomCreate(data: IRoom): Promise<void> {\n        const cfRoom = new Room(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPostRoomCreate)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPOSTROOMCREATE)) {\n                continueOn = await app.call(AppMethod.CHECKPOSTROOMCREATE,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPOSTROOMCREATE)) {\n                await app.call(AppMethod.EXECUTEPOSTROOMCREATE,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                );\n            }\n        }\n    }\n\n    private async executePreRoomDeletePrevent(data: IRoom): Promise<boolean> {\n        const cfRoom = new Room(Utilities.deepCloneAndFreeze(data), this.manager);\n        let prevented = false;\n\n        for (const appId of this.listeners.get(AppInterface.IPreRoomDeletePrevent)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREROOMDELETEPREVENT)) {\n                continueOn = await app.call(AppMethod.CHECKPREROOMDELETEPREVENT,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREROOMDELETEPREVENT)) {\n                prevented = await app.call(AppMethod.EXECUTEPREROOMDELETEPREVENT,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as boolean;\n\n                if (prevented) {\n                    return prevented;\n                }\n            }\n        }\n\n        return prevented;\n    }\n\n    private async executePostRoomDeleted(data: IRoom): Promise<void> {\n        const cfRoom = new Room(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPostRoomDeleted)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPOSTROOMDELETED)) {\n                continueOn = await app.call(AppMethod.CHECKPOSTROOMDELETED,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPOSTROOMDELETED)) {\n                await app.call(AppMethod.EXECUTEPOSTROOMDELETED,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                );\n            }\n        }\n    }\n\n    private async executePreRoomUserJoined(externalData: IRoomUserJoinedContext): Promise<void> {\n        const data = Utilities.deepClone(externalData);\n\n        data.room = new Room(Utilities.deepFreeze(data.room), this.manager);\n        Utilities.deepFreeze(data.joiningUser);\n\n        if (data.inviter) {\n            Utilities.deepFreeze(data.inviter);\n        }\n\n        for (const appId of this.listeners.get(AppInterface.IPreRoomUserJoined)) {\n            const app = this.manager.getOneById(appId);\n\n            if (app.hasMethod(AppMethod.EXECUTE_PRE_ROOM_USER_JOINED)) {\n                await app.call(AppMethod.EXECUTE_PRE_ROOM_USER_JOINED,\n                    data,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                );\n            }\n        }\n    }\n\n    private async executePostRoomUserJoined(externalData: IRoomUserJoinedContext): Promise<void> {\n        const data = Utilities.deepClone(externalData);\n\n        data.room = new Room(Utilities.deepFreeze(data.room), this.manager);\n        Utilities.deepFreeze(data.joiningUser);\n\n        if (data.inviter) {\n            Utilities.deepFreeze(data.inviter);\n        }\n\n        for (const appId of this.listeners.get(AppInterface.IPostRoomUserJoined)) {\n            const app = this.manager.getOneById(appId);\n\n            if (app.hasMethod(AppMethod.EXECUTE_POST_ROOM_USER_JOINED)) {\n                await app.call(AppMethod.EXECUTE_POST_ROOM_USER_JOINED,\n                    data,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                );\n            }\n        }\n    }\n\n    private async executePreRoomUserLeave(externalData: IRoomUserLeaveContext): Promise<void> {\n        const data = Utilities.deepClone(externalData);\n\n        data.room = new Room(Utilities.deepFreeze(data.room), this.manager);\n        Utilities.deepFreeze(data.leavingUser);\n\n        for (const appId of this.listeners.get(AppInterface.IPreRoomUserLeave)) {\n            const app = this.manager.getOneById(appId);\n\n            if (app.hasMethod(AppMethod.EXECUTE_PRE_ROOM_USER_LEAVE)) {\n                await app.call(AppMethod.EXECUTE_PRE_ROOM_USER_LEAVE,\n                    data,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                );\n            }\n        }\n    }\n\n    private async executePostRoomUserLeave(externalData: IRoomUserLeaveContext): Promise<void> {\n        const data = Utilities.deepClone(externalData);\n\n        data.room = new Room(Utilities.deepFreeze(data.room), this.manager);\n        Utilities.deepFreeze(data.leavingUser);\n\n        for (const appId of this.listeners.get(AppInterface.IPostRoomUserLeave)) {\n            const app = this.manager.getOneById(appId);\n\n            if (app.hasMethod(AppMethod.EXECUTE_POST_ROOM_USER_LEAVE)) {\n                await app.call(AppMethod.EXECUTE_POST_ROOM_USER_LEAVE,\n                    data,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                );\n            }\n        }\n    }\n\n    // External Components\n    private async executePostExternalComponentOpened(data: IExternalComponent): Promise<void> {\n        const cfExternalComponent = Utilities.deepCloneAndFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostExternalComponentOpened)) {\n            const app = this.manager.getOneById(appId);\n\n            if (app.hasMethod(AppMethod.EXECUTEPOSTEXTERNALCOMPONENTOPENED)) {\n                await app.call(AppMethod.EXECUTEPOSTEXTERNALCOMPONENTOPENED,\n                    cfExternalComponent,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                );\n            }\n        }\n    }\n\n    private async executePostExternalComponentClosed(data: IExternalComponent): Promise<void> {\n        const cfExternalComponent = Utilities.deepCloneAndFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostExternalComponentClosed)) {\n            const app = this.manager.getOneById(appId);\n\n            if (app.hasMethod(AppMethod.EXECUTEPOSTEXTERNALCOMPONENTCLOSED)) {\n                await app.call(AppMethod.EXECUTEPOSTEXTERNALCOMPONENTCLOSED,\n                    cfExternalComponent,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                );\n            }\n        }\n    }\n\n    private async executeUIKitInteraction(data: IUIKitIncomingInteraction): Promise<IUIKitResponse> {\n        const { appId, type } = data;\n\n        const method = ((interactionType: string) => {\n            switch (interactionType) {\n                case UIKitIncomingInteractionType.BLOCK:\n                    return AppMethod.UIKIT_BLOCK_ACTION;\n                case UIKitIncomingInteractionType.VIEW_SUBMIT:\n                    return AppMethod.UIKIT_VIEW_SUBMIT;\n                case UIKitIncomingInteractionType.VIEW_CLOSED:\n                    return AppMethod.UIKIT_VIEW_CLOSE;\n                case UIKitIncomingInteractionType.ACTION_BUTTON:\n                    return AppMethod.UIKIT_ACTION_BUTTON;\n            }\n        })(type);\n\n        const app = this.manager.getOneById(appId);\n        if (!app?.hasMethod(method)) {\n            console.warn(`App ${appId} triggered an interaction but it doen't exist or doesn't have method ${method}`);\n            return;\n        }\n\n        const interactionContext = ((interactionType: UIKitIncomingInteractionType, interactionData: IUIKitIncomingInteraction) => {\n            const {\n                actionId,\n                message,\n                user,\n                room,\n                triggerId,\n                container,\n            } = interactionData;\n\n            switch (interactionType) {\n                case UIKitIncomingInteractionType.BLOCK: {\n                    const { value, blockId } = interactionData.payload as { value: string; blockId: string };\n\n                    return new UIKitBlockInteractionContext({\n                        appId,\n                        actionId,\n                        blockId,\n                        user,\n                        room,\n                        triggerId,\n                        value,\n                        message,\n                        container,\n                    });\n                }\n                case UIKitIncomingInteractionType.VIEW_SUBMIT: {\n                    const { view } = interactionData.payload as { view: IUIKitSurface };\n\n                    return new UIKitViewSubmitInteractionContext({\n                        appId,\n                        actionId,\n                        view,\n                        room,\n                        triggerId,\n                        user,\n                    });\n                }\n                case UIKitIncomingInteractionType.VIEW_CLOSED: {\n                    const { view, isCleared } = interactionData.payload as { view: IUIKitSurface, isCleared: boolean };\n\n                    return new UIKitViewCloseInteractionContext({\n                        appId,\n                        actionId,\n                        view,\n                        room,\n                        isCleared,\n                        user,\n                    });\n                }\n                case UIKitIncomingInteractionType.ACTION_BUTTON: {\n                    const { context: buttonContext } = interactionData.payload as { context: UIActionButtonContext };\n\n                    return new UIKitActionButtonInteractionContext({\n                        appId,\n                        actionId,\n                        buttonContext,\n                        room,\n                        triggerId,\n                        user,\n                        message,\n                    });\n                }\n            }\n        })(type, data);\n\n        return app.call(method,\n            interactionContext,\n            this.am.getReader(appId),\n            this.am.getHttp(appId),\n            this.am.getPersistence(appId),\n            this.am.getModifier(appId),\n        );\n    }\n\n    private async executeUIKitLivechatInteraction(data: IUIKitLivechatIncomingInteraction): Promise<IUIKitResponse> {\n        const { appId, type } = data;\n\n        const method = ((interactionType: string) => {\n            switch (interactionType) {\n                case UIKitIncomingInteractionType.BLOCK:\n                    return AppMethod.UIKIT_LIVECHAT_BLOCK_ACTION;\n            }\n        })(type);\n\n        const app = this.manager.getOneById(appId);\n        if (!app.hasMethod(method)) {\n            return;\n        }\n\n        const interactionContext = ((interactionType: UIKitIncomingInteractionType, interactionData: IUIKitLivechatIncomingInteraction) => {\n            const {\n                actionId,\n                message,\n                visitor,\n                room,\n                triggerId,\n                container,\n            } = interactionData;\n\n            switch (interactionType) {\n                case UIKitIncomingInteractionType.BLOCK: {\n                    const { value, blockId } = interactionData.payload as { value: string; blockId: string };\n\n                    return new UIKitLivechatBlockInteractionContext({\n                        appId,\n                        actionId,\n                        blockId,\n                        visitor,\n                        room,\n                        triggerId,\n                        value,\n                        message,\n                        container: container as IUIKitIncomingInteractionModalContainer | IUIKitIncomingInteractionMessageContainer,\n                    });\n                }\n            }\n        })(type, data);\n\n        return app.call(method,\n            interactionContext,\n            this.am.getReader(appId),\n            this.am.getHttp(appId),\n            this.am.getPersistence(appId),\n            this.am.getModifier(appId),\n        );\n    }\n    // Livechat\n    private async executePostLivechatRoomStarted(data: ILivechatRoom): Promise<void> {\n        const cfLivechatRoom = Utilities.deepCloneAndFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostLivechatRoomStarted)) {\n            const app = this.manager.getOneById(appId);\n\n            if (!app.hasMethod(AppMethod.EXECUTE_POST_LIVECHAT_ROOM_STARTED)) {\n                continue;\n            }\n\n            await app.call(AppMethod.EXECUTE_POST_LIVECHAT_ROOM_STARTED,\n                cfLivechatRoom,\n                this.am.getReader(appId),\n                this.am.getHttp(appId),\n                this.am.getPersistence(appId),\n                this.am.getModifier(appId),\n            );\n        }\n    }\n\n    private async executeLivechatRoomClosedHandler(data: ILivechatRoom): Promise<void> {\n        const cfLivechatRoom = Utilities.deepCloneAndFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.ILivechatRoomClosedHandler)) {\n            const app = this.manager.getOneById(appId);\n\n            if (!app.hasMethod(AppMethod.EXECUTE_LIVECHAT_ROOM_CLOSED_HANDLER)) {\n                continue;\n            }\n\n            await app.call(AppMethod.EXECUTE_LIVECHAT_ROOM_CLOSED_HANDLER,\n                cfLivechatRoom,\n                this.am.getReader(appId),\n                this.am.getHttp(appId),\n                this.am.getPersistence(appId),\n                this.am.getModifier(appId),\n            );\n        }\n    }\n\n    private async executePostLivechatRoomClosed(data: ILivechatRoom): Promise<void> {\n        const cfLivechatRoom = Utilities.deepCloneAndFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostLivechatRoomClosed)) {\n            const app = this.manager.getOneById(appId);\n\n            if (!app.hasMethod(AppMethod.EXECUTE_POST_LIVECHAT_ROOM_CLOSED)) {\n                continue;\n            }\n\n            await app.call(AppMethod.EXECUTE_POST_LIVECHAT_ROOM_CLOSED,\n                cfLivechatRoom,\n                this.am.getReader(appId),\n                this.am.getHttp(appId),\n                this.am.getPersistence(appId),\n                this.am.getModifier(appId),\n            );\n        }\n    }\n\n    private async executePostLivechatAgentAssigned(data: ILivechatEventContext): Promise<void> {\n        const cfLivechatRoom = Utilities.deepCloneAndFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostLivechatAgentAssigned)) {\n            const app = this.manager.getOneById(appId);\n\n            if (!app.hasMethod(AppMethod.EXECUTE_POST_LIVECHAT_AGENT_ASSIGNED)) {\n                continue;\n            }\n\n            await app.call(AppMethod.EXECUTE_POST_LIVECHAT_AGENT_ASSIGNED,\n                cfLivechatRoom,\n                this.am.getReader(appId),\n                this.am.getHttp(appId),\n                this.am.getPersistence(appId),\n                this.am.getModifier(appId),\n            );\n        }\n    }\n\n    private async executePostLivechatAgentUnassigned(data: ILivechatEventContext): Promise<void> {\n        const cfLivechatRoom = Utilities.deepCloneAndFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostLivechatAgentUnassigned)) {\n            const app = this.manager.getOneById(appId);\n\n            if (!app.hasMethod(AppMethod.EXECUTE_POST_LIVECHAT_AGENT_UNASSIGNED)) {\n                continue;\n            }\n\n            await app.call(AppMethod.EXECUTE_POST_LIVECHAT_AGENT_UNASSIGNED,\n                cfLivechatRoom,\n                this.am.getReader(appId),\n                this.am.getHttp(appId),\n                this.am.getPersistence(appId),\n                this.am.getModifier(appId),\n            );\n        }\n    }\n\n    private async executePostLivechatRoomTransferred(data: ILivechatTransferEventContext): Promise<void> {\n        const cfLivechatRoom = Utilities.deepCloneAndFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostLivechatRoomTransferred)) {\n            const app = this.manager.getOneById(appId);\n\n            if (!app.hasMethod(AppMethod.EXECUTE_POST_LIVECHAT_ROOM_TRANSFERRED)) {\n                continue;\n            }\n\n            await app.call(AppMethod.EXECUTE_POST_LIVECHAT_ROOM_TRANSFERRED,\n                cfLivechatRoom,\n                this.am.getReader(appId),\n                this.am.getHttp(appId),\n                this.am.getPersistence(appId),\n                this.am.getModifier(appId),\n            );\n        }\n    }\n\n    private async executePostLivechatGuestSaved(data: IVisitor): Promise<void> {\n        const cfLivechatRoom = Utilities.deepCloneAndFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostLivechatGuestSaved)) {\n            const app = this.manager.getOneById(appId);\n\n            if (!app.hasMethod(AppMethod.EXECUTE_POST_LIVECHAT_GUEST_SAVED)) {\n                continue;\n            }\n\n            await app.call(AppMethod.EXECUTE_POST_LIVECHAT_GUEST_SAVED,\n                cfLivechatRoom,\n                this.am.getReader(appId),\n                this.am.getHttp(appId),\n                this.am.getPersistence(appId),\n                this.am.getModifier(appId),\n            );\n        }\n    }\n\n    private async executePostLivechatRoomSaved(data: ILivechatRoom): Promise<void> {\n        const cfLivechatRoom = Utilities.deepCloneAndFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostLivechatRoomSaved)) {\n            const app = this.manager.getOneById(appId);\n\n            if (!app.hasMethod(AppMethod.EXECUTE_POST_LIVECHAT_ROOM_SAVED)) {\n                continue;\n            }\n\n            await app.call(AppMethod.EXECUTE_POST_LIVECHAT_ROOM_SAVED,\n                cfLivechatRoom,\n                this.am.getReader(appId),\n                this.am.getHttp(appId),\n                this.am.getPersistence(appId),\n                this.am.getModifier(appId),\n            );\n        }\n    }\n\n    // FileUpload\n    private async executePreFileUpload(data: IFileUploadContext): Promise<void> {\n        const context = Object.freeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPreFileUpload)) {\n            const app = this.manager.getOneById(appId);\n\n            if (app.hasMethod(AppMethod.EXECUTE_PRE_FILE_UPLOAD)) {\n                await app.call(AppMethod.EXECUTE_PRE_FILE_UPLOAD,\n                    context,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                );\n            }\n        }\n    }\n\n    private async executePreEmailSent(data: IPreEmailSentContext): Promise<IEmailDescriptor> {\n        let descriptor = data.email;\n\n        for (const appId of this.listeners.get(AppInterface.IPreEmailSent)) {\n            const app = this.manager.getOneById(appId);\n\n            if (app.hasMethod(AppMethod.EXECUTE_PRE_EMAIL_SENT)) {\n                descriptor = await app.call(AppMethod.EXECUTE_PRE_EMAIL_SENT,\n                    {\n                        context: data.context,\n                        email: descriptor,\n                    },\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                );\n            }\n        }\n\n        return descriptor;\n    }\n\n    private async executePostMessageReacted(data: IMessageReactionContext): Promise<void> {\n        const context = Utilities.deepCloneAndFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostMessageReacted)) {\n            const app = this.manager.getOneById(appId);\n\n            if (!app.hasMethod(AppMethod.EXECUTE_POST_MESSAGE_REACTED)) {\n                continue;\n            }\n\n            await app.call(AppMethod.EXECUTE_POST_MESSAGE_REACTED,\n                context,\n                this.am.getReader(appId),\n                this.am.getHttp(appId),\n                this.am.getPersistence(appId),\n                this.am.getModifier(appId),\n            );\n        }\n    }\n\n    private async executePostMessageFollowed(data: IMessageFollowContext): Promise<void> {\n        const context = Utilities.deepCloneAndFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostMessageFollowed)) {\n            const app = this.manager.getOneById(appId);\n\n            if (!app.hasMethod(AppMethod.EXECUTE_POST_MESSAGE_FOLLOWED)) {\n                continue;\n            }\n\n            await app.call(AppMethod.EXECUTE_POST_MESSAGE_FOLLOWED,\n                context,\n                this.am.getReader(appId),\n                this.am.getHttp(appId),\n                this.am.getPersistence(appId),\n                this.am.getModifier(appId),\n            );\n        }\n    }\n\n    private async executePostMessagePinned(data: IMessagePinContext): Promise<void> {\n        const context = Utilities.deepCloneAndFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostMessagePinned)) {\n            const app = this.manager.getOneById(appId);\n\n            if (!app.hasMethod(AppMethod.EXECUTE_POST_MESSAGE_PINNED)) {\n                continue;\n            }\n\n            await app.call(AppMethod.EXECUTE_POST_MESSAGE_PINNED,\n                context,\n                this.am.getReader(appId),\n                this.am.getHttp(appId),\n                this.am.getPersistence(appId),\n                this.am.getModifier(appId),\n            );\n        }\n    }\n\n    private async executePostMessageStarred(data: IMessageStarContext): Promise<void> {\n        const context = Utilities.deepCloneAndFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostMessageStarred)) {\n            const app = this.manager.getOneById(appId);\n\n            if (!app.hasMethod(AppMethod.EXECUTE_POST_MESSAGE_STARRED)) {\n                continue;\n            }\n\n            await app.call(AppMethod.EXECUTE_POST_MESSAGE_STARRED,\n                context,\n                this.am.getReader(appId),\n                this.am.getHttp(appId),\n                this.am.getPersistence(appId),\n                this.am.getModifier(appId),\n            );\n        }\n    }\n\n    private async executePostMessageReported(data: IMessageReportContext): Promise<void> {\n        const context = Utilities.deepCloneAndFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostMessageReported)) {\n            const app = this.manager.getOneById(appId);\n\n            if (!app.hasMethod(AppMethod.EXECUTE_POST_MESSAGE_REPORTED)) {\n                continue;\n            }\n\n            await app.call(AppMethod.EXECUTE_POST_MESSAGE_REPORTED,\n                context,\n                this.am.getReader(appId),\n                this.am.getHttp(appId),\n                this.am.getPersistence(appId),\n                this.am.getModifier(appId),\n            );\n        }\n    }\n\n    private async executePostUserCreated(data: IUserContext): Promise<void> {\n        const context = Utilities.deepFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostUserCreated)) {\n            const app = this.manager.getOneById(appId);\n\n            if (app.hasMethod(AppMethod.EXECUTE_POST_USER_CREATED)) {\n                await app.call(AppMethod.EXECUTE_POST_USER_CREATED,\n                    context,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                );\n            }\n        }\n    }\n\n    private async executePostUserUpdated(data: IUserUpdateContext): Promise<void> {\n        const context = Utilities.deepFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostUserUpdated)) {\n            const app = this.manager.getOneById(appId);\n\n            if (app.hasMethod(AppMethod.EXECUTE_POST_USER_UPDATED)) {\n                await app.call(AppMethod.EXECUTE_POST_USER_UPDATED,\n                    context,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                );\n            }\n        }\n    }\n\n    private async executePostUserDeleted(data: IUserContext): Promise<void> {\n        const context = Utilities.deepFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostUserDeleted)) {\n            const app = this.manager.getOneById(appId);\n\n            if (app.hasMethod(AppMethod.EXECUTE_POST_USER_DELETED)) {\n                await app.call(AppMethod.EXECUTE_POST_USER_DELETED,\n                    context,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                    );\n            }\n        }\n    }\n\n    private async executePostUserLoggedIn(data: IUser): Promise<void> {\n        const context = Utilities.deepFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostUserLoggedIn)) {\n            const app = this.manager.getOneById(appId);\n\n            if (app.hasMethod(AppMethod.EXECUTE_POST_USER_LOGGED_IN)) {\n                await app.call(AppMethod.EXECUTE_POST_USER_LOGGED_IN,\n                    context,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                );\n            }\n        }\n    }\n\n    private async executePostUserLoggedOut(data: IUser): Promise<void> {\n        const context = Utilities.deepFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostUserLoggedOut)) {\n            const app = this.manager.getOneById(appId);\n\n            if (app.hasMethod(AppMethod.EXECUTE_POST_USER_LOGGED_OUT)) {\n                await app.call(AppMethod.EXECUTE_POST_USER_LOGGED_OUT,\n                    context,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                );\n            }\n        }\n    }\n    private async executePostUserStatusChanged(data: IUserStatusContext): Promise<void> {\n        const context = Utilities.deepFreeze(data);\n\n        for (const appId of this.listeners.get(AppInterface.IPostUserStatusChanged)) {\n            const app = this.manager.getOneById(appId);\n\n            if (app.hasMethod(AppMethod.EXECUTE_POST_USER_STATUS_CHANGED)) {\n                await app.call(AppMethod.EXECUTE_POST_USER_STATUS_CHANGED,\n                    context,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                );\n            }\n        }\n    }\n}\n"]}